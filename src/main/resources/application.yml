server:
  port: @server.port@
spring:
  application:
    name: @project.name@
  output:
    ansi:
      enabled: always

info:
  version: @project.version@
  stage: dev

operations:
  preAggregationPeriod: 3000
  useServiceConfigPreAggregationPeriod: false
  schedulerPoolSize: 2
  metricsCheckPeriod: 5000
  metricsInitialDelayPeriod: 5000

kafka:
  bootstrap-servers: "localhost:29092"
  consumer:
    topic: "fault-detector"
    client-id: "fault-detector"
    group-id: "fault-detector"
    max-pool-records: 300
    fetch-min-bytes: 1024
    fetch-max-wait-ms: 1000
    concurrency: 1
    reconnect-backoff-ms: 15000
    reconnect-backoff-max-ms: 30000
    retry-backoff-ms: 1000
  ssl:
    enabled: false
    truststore:
      location-config: "src/main/resources/cert/truststore.p12"
      password-config: "kenny12"
      type: "PKCS12"
    keystore:
      location-config: "src/main/resources/cert/keystore.p12"
      password-config: "kenny"
      type: "PKCS12"
    key:
      password-config: "kenny"

management:
  security:
    flag: false
  server:
    port: '@management.port@'
  metrics:
    export:
      prometheus:
        enabled: true
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
